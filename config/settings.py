#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
SYSTEM SETTINGS - ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å
================================
‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Intelligent Gold Trading

‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á:
- config/trading_params.py (‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î)
- config/session_config.py (‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session)
- utilities/configuration_manager.py (‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ config file)
"""

import os
from pathlib import Path
from dataclasses import dataclass, field
from typing import Dict, List, Optional
from enum import Enum

class TradingMode(Enum):
    """‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö"""
    LIVE = "LIVE"           # ‡πÄ‡∏ó‡∏£‡∏î‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏ï‡∏≤‡∏° requirement)
    
class MarketSession(Enum):
    """‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏ï‡∏•‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ"""
    ASIAN = "ASIAN"         # 22:00-08:00 GMT+7
    LONDON = "LONDON"       # 15:00-00:00 GMT+7  
    NEW_YORK = "NEW_YORK"   # 20:30-05:30 GMT+7
    OVERLAP = "OVERLAP"     # 20:30-00:00 GMT+7

@dataclass
class SystemSettings:
    """
    ‡∏Ñ‡∏•‡∏≤‡∏™‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
    ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    """
    
    # === CORE SYSTEM SETTINGS ===
    trading_mode: TradingMode = TradingMode.LIVE
    symbol: str = "XAUUSD"  # Gold ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    
    # === VOLUME & REBATE TARGETS ===
    daily_volume_target_min: float = 50.0   # lots/‡∏ß‡∏±‡∏ô (minimum)
    daily_volume_target_max: float = 100.0  # lots/‡∏ß‡∏±‡∏ô (maximum)
    rebate_optimization: bool = True         # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û rebate
    
    # === MARKET INTELLIGENCE SETTINGS ===
    timeframes_analysis: List[str] = field(default_factory=lambda: ["M1", "M5", "M15", "H1"])
    market_analysis_interval: int = 1  # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ - ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ï‡∏•‡∏≤‡∏î
    
    # ADX Settings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Trend Detection
    adx_trending_threshold: float = 25.0    # ADX > 25 = Trending
    adx_ranging_threshold: float = 20.0     # ADX < 20 = Ranging
    
    # ATR Settings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Volatility Detection  
    atr_period: int = 14
    atr_multiplier_high: float = 1.5        # ATR * 1.5 = High Volatility
    atr_multiplier_low: float = 0.8         # ATR * 0.8 = Low Volatility
    
    # === RECOVERY SYSTEM SETTINGS ===
    use_stop_loss: bool = False              # ‚úÖ FORBIDDEN - ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ SL
    recovery_mandatory: bool = True          # ‚úÖ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö Recovery
    max_recovery_attempts: int = 999         # ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Recovery
    
    # === ENTRY FREQUENCY SETTINGS ===
    high_frequency_mode: bool = True         # ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î High Frequency
    max_positions_per_hour: int = 50         # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
    min_entry_interval_seconds: int = 10     # ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå
    
    # === MT5 CONNECTION SETTINGS ===
    # üöÄ AUTO-DETECT: ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å MT5 ‡∏ó‡∏µ‡πà Login ‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    mt5_login: Optional[int] = None             # ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å MT5 ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    mt5_password: Optional[str] = None          # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    mt5_server: Optional[str] = None            # ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å MT5 ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    mt5_path: Optional[str] = None              # Path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á terminal64.exe (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏∞‡∏´‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
    use_existing_connection: bool = True        # ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    
    connection_timeout: int = 30                # Timeout ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    reconnect_attempts: int = 5                 # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° reconnect
    
    # === GUI SETTINGS ===
    gui_update_interval: int = 1000            # GUI update ‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    enable_real_time_charts: bool = True       # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
    
    # === LOGGING SETTINGS ===
    log_level: str = "INFO"                    # DEBUG, INFO, WARNING, ERROR
    log_to_file: bool = True                   # ‡πÄ‡∏ã‡∏ü log ‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
    log_max_files: int = 10                    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå log ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
    
    # === SAFETY SETTINGS ===
    max_drawdown_percent: float = 20.0         # Drawdown ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 20%
    max_daily_trades: int = 200                # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô trades ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
    emergency_stop_enabled: bool = True        # ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏¢‡∏∏‡∏î‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
    
    def __post_init__(self):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á instance"""
        self._validate_settings()
    
    def _validate_settings(self):
        """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Trading Mode ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô LIVE ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        if self.trading_mode != TradingMode.LIVE:
            raise ValueError("‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ LIVE Trading ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Symbol ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô XAUUSD ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        if self.symbol != "XAUUSD":
            raise ValueError("‚ùå ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ XAUUSD (Gold) ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!")
            
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Stop Loss ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏°‡∏≠
        if self.use_stop_loss:
            raise ValueError("‚ùå ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ Stop Loss! ‡πÉ‡∏ä‡πâ Recovery System ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!")
            
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Recovery ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏°‡∏≠
        if not self.recovery_mandatory:
            raise ValueError("‚ùå Recovery System ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô!")
        
    @classmethod
    def load_from_file(cls, config_path: Optional[str] = None) -> 'SystemSettings':
        """
        ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå config
        ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ: utilities/configuration_manager.py
        """
        # TODO: Implement file loading logic
        return cls()
    
    def save_to_file(self, config_path: Optional[str] = None) -> bool:
        """
        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå
        ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ: utilities/configuration_manager.py
        """
        # TODO: Implement file saving logic
        return True
    
    def validate_mt5_settings(self) -> bool:
        """
        ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MT5
        ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ: mt5_integration/mt5_connector.py
        """
        # ‡∏´‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö credentials
        if self.use_existing_connection:
            return True
            
        required_fields = [self.mt5_server, self.mt5_login, self.mt5_password]
        missing_fields = []
        
        if not self.mt5_login:
            missing_fields.append("mt5_login")
        if not self.mt5_password:
            missing_fields.append("mt5_password")  
        if not self.mt5_server:
            missing_fields.append("mt5_server")
            
        if missing_fields:
            print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MT5 ‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ: {', '.join(missing_fields)}")
            return False
            
        return True
    
    def get_session_settings(self, session: MarketSession) -> Dict:
        """
        ‡∏î‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ session
        ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ: config/session_config.py
        """
        # TODO: Implement session-specific settings
        return {}
    
    def get_trading_parameters(self) -> Dict:
        """
        ‡∏î‡∏∂‡∏á‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î
        ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ: config/trading_params.py
        """
        # TODO: Implement trading parameters loading
        return {}
    
    def get_mt5_info_string(self) -> str:
        """‡∏™‡∏£‡πâ‡∏≤‡∏á string ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MT5"""
        if self.use_existing_connection:
            return "MT5: ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
        elif self.validate_mt5_settings():
            return f"Login: {self.mt5_login} | Server: {self.mt5_server}"
        else:
            return "MT5 Settings: ‚ùå Not Configured"
    
    def set_mt5_credentials(self, login: int, password: str, server: str, path: Optional[str] = None):
        """
        ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MT5 ‡πÉ‡∏´‡∏°‡πà
        
        Args:
            login: ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ MT5
            password: ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô MT5  
            server: ‡∏ä‡∏∑‡πà‡∏≠ Server MT5
            path: path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á terminal64.exe (optional)
        """
        self.mt5_login = login
        self.mt5_password = password
        self.mt5_server = server
        self.mt5_path = path
        self.use_existing_connection = False  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô manual login
        
        print(f"‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MT5: {self.get_mt5_info_string()}")

# === GLOBAL SETTINGS INSTANCE ===
# ‡∏™‡∏£‡πâ‡∏≤‡∏á instance ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö
_global_settings: Optional[SystemSettings] = None

def get_system_settings() -> SystemSettings:
    """
    ‡∏î‡∏∂‡∏á SystemSettings ‡πÅ‡∏ö‡∏ö Singleton
    ‡πÉ‡∏ä‡πâ instance ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö
    """
    global _global_settings
    if _global_settings is None:
        _global_settings = SystemSettings()
    return _global_settings

def update_system_settings(new_settings: SystemSettings) -> None:
    """
    ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö
    """
    global _global_settings
    _global_settings = new_settings

def setup_mt5_connection(login: int, password: str, server: str, path: Optional[str] = None) -> SystemSettings:
    """
    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MT5 ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
    
    Args:
        login: ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ MT5
        password: ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô MT5
        server: ‡∏ä‡∏∑‡πà‡∏≠ Server MT5  
        path: path ‡πÑ‡∏õ‡∏¢‡∏±‡∏á terminal64.exe (optional)
        
    Returns:
        SystemSettings instance ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß
        
    Example:
        >>> settings = setup_mt5_connection(
        ...     login=51050633,
        ...     password="YourPassword123", 
        ...     server="MetaQuotes-Demo"
        ... )
    """
    settings = get_system_settings()
    settings.set_mt5_credentials(login, password, server, path)
    return settings

# === MT5 CONFIGURATION HELPER ===
def get_common_mt5_servers() -> List[str]:
    """‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ MT5 Server ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ"""
    return [
        # Demo Servers
        "MetaQuotes-Demo",
        "MetaQuotes-Server", 
        
        # Popular Brokers
        "ICMarkets-Live-01", "ICMarkets-Live-02", "ICMarkets-Live-16",
        "FTMO-Server", "FTMO-Server2", "FTMO-Demo",
        "XM-Server", "XM-Real", "XM-Demo", 
        "Exness-MT5Real", "Exness-MT5Real2", "Exness-Demo",
        "Admiral-Real", "Admiral-Demo",
        "FXCM-USDReal", "FXCM-Demo",
        "Pepperstone-Live", "Pepperstone-Demo",
        "Oanda-v20Live", "Oanda-Demo",
        
        # Thai Brokers
        "FSMSmart-Server", "FSMSmart-Demo",
        "KTZMaximusLive", "KTZMaximus-Demo"
    ]

def print_mt5_setup_instructions():
   """‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MT5"""
   print("""
üîß MT5 AUTO-DETECT CONNECTION SETUP
===================================

‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥):
1. ‡πÄ‡∏õ‡∏¥‡∏î MetaTrader 5
2. Login ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢
3. ‡πÄ‡∏õ‡∏¥‡∏î AutoTrading (‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Algo Trading)
4. ‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° - ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞ Auto-detect ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠

üîß ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Manual Setup:
‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô setup_mt5_connection():

from config.settings import setup_mt5_connection
settings = setup_mt5_connection(
   login=your_account_number,
   password="your_password", 
   server="your_server_name"
)

üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:
- MT5 ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Server ‡πÅ‡∏•‡πâ‡∏ß
- AutoTrading ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà (‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß)
- Symbol XAUUSD ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
- ‡πÑ‡∏°‡πà‡∏°‡∏µ Error ‡πÉ‡∏ô Expert/Journal tab
   """)

# Auto-print setup instructions when imported
if __name__ == "__main__":
   print_mt5_setup_instructions()
